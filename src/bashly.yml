name: fastatools
help: |-
  Useful scripts for FASTA manipulation grouped in a single tool

  This tool follows the UNIX philosophy, meaning that it reads the satndard input and writes to the standard output so it can be chained with other tools. 
  However, for each and every command there are the --input (-i) and --output (-o) flags  allowing you to manually specify input and output files.

version: 0.1.0a
commands:
  - name: upper
    help: Transform sequences to uppercase
    group: Transformation
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: lower
    help: Transform sequences to lowercase
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: pretty
    help: Wrap long sequences to a desired width
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --width
        short: -w
        arg: width
        default: 60
        help: width at which to wrap sequences

  - name: select
    help: Select sequences to keep by name
    group: Selection
    catch_all: true
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --file
        short: -f
        arg: file
        help: file with names of sequences to keep (1 name per line)

      - long: --regex
        short: -r
        arg: regex
        help: regex defining files to keep

      - long: --exclude
        short: -x
        help: discards sequences instead of keeping them

  - name: subset
    help: |-
      Select sequences to keep by index

      Indices are inclusive and start at 1.

      You can select individual indices: 
        fastatools subset -i input.fa 10 20 30 
      Or a interval: 
        fastatools subset -i input.fa --start 10 --end 20

      You can specify only one of --start/--end and to define open ended intervals. 
      If individual indices are specified, it will override any --start or --end specification.
    catch_all: true
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --start
        short: -s
        arg: startIndex
        help: starting index
        default: 1

      - long: --end
        short: -e
        arg: endIndex
        help: ending index
        default: 9223372036854775807

      - long: --exclude
        short: -x
        help: discards sequences instead of keeping them

  - name: head
    help: Print first sequences
    flags:
      - long: --number
        short: -n
        arg: number
        default: 10
        help: number of sequences to show

      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: tail
    help: Print last sequences
    flags:
      - long: --number
        short: -n
        arg: number
        default: 10
        help: number of sequences to show

      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: subsite
    help: |-
      Select specific sites of aligned FASTA sequences

      The sites can be a list of integers specified as positional arguments or in a file. 
      If the sequences are not aligned (i.e they do not have the same length) a warning will be thrown.

    catch_all: true
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --file
        short: -f
        arg: file
        help: file with positions of am to keep (1 name per line)

      - long: --fail
        short: -x
        help: Exit with an error if sequences are unaligned instead of warn.

  - name: count
    help: Count number of sequences in FASTA
    group: Information
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: names
    help: Get names of sequences in FASTA
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: length
    help: Get lengths of sequences in FASTA
    examples:
      - |-
        # Get length of each sequence:

          fastatools length \\ 
              -i input.fasta
        \n

      - |-
        # Get average length of sequences:

          fastatools length \\ 
              -i input.fasta \\ 
              -m mean
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --mode
        short: -m
        arg: mode
        help: |-
          How to display length
          The "each" mode will display length for every sequence. The "min", "max" and "mean" modes will display the computed length over all sequences. The "sum" option will return the sum of all sequence lengths.
        default: each
        allowed: [each, min, max, mean, sum]

      - long: --readable
        short: -r
        help: Human readable lengths

  - name: freqs
    help: Get nucleotide frequencies in sequences
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

      - long: --mean
        short: -m
        help: display the mean frequencies over all sequences

  - name: split
    help: Split FASTA file in several files
    group: Splitting
    flags:
      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --each
        short: -e
        help: split file into individual sequences

      - long: --every
        short: -v
        arg: every
        help: split every n sequences (incompatible with --each)

      - long: --prefix
        short: -p
        arg: outputPrefix
        help: prefix for output_files
        default: split_

  - name: rename
    help: Rename sequences in FASTA
    group: Name Manipulation
    catch_all: true
    flags:
      - long: --file
        short: -f
        arg: file
        help: path to rename file with "old_name>new_name" on each line

      - long: --regex
        short: -r
        arg: regex
        help: regex to rename file.

      - long: --substitute
        short: -s
        arg: sub
        help: replacer group in regex (only works if --regex is specified). If not set then rename will delete the regex match.

      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: addid
    help: Add identifier at the end of sequence names
    args:
      - name: id
        help: identifier to add to sequence names
        required: true
    flags:
      - long: --prefix
        short: -p
        help: add id to beginning instead of end

      - long: --input
        short: -i
        arg: inputPath
        help: path to input file

      - long: --output
        short: -o
        arg: outputPath
        help: path to output file

  - name: completion
    group: Miscellaneous
    help: Generate Bash completion script
